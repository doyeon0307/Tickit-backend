name: Go Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/tickit-backend
  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
  MONGODB_URI: mongodb://mongodb:27017

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    
    - name: Build and Test
      run: |
        go build -v ./...
        go test -v ./...
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_IMAGE }}:latest
        build-args: |
          JWT_SECRET_KEY=${{ env.JWT_SECRET_KEY }}
          AWS_ACCESS_KEY=${{ env.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY=${{ env.AWS_SECRET_KEY }}
          MONGODB_URI=${{ env.MONGODB_URI }}

    - name: Copy deployment files to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22
        source: "docker-compose.yml,Dockerfile"
        target: "~/"

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22
        script: |
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi
          
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_HUB_TOKEN }}
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" > .env
          echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> .env
          echo "AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}" >> .env
          echo "MONGODB_URI=mongodb://mongodb:27017" >> .env
          
          docker-compose down || true
          docker-compose pull
          docker-compose up -d