definitions:
  common.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  dto.Field:
    properties:
      content:
        type: string
      subtitle:
        type: string
    type: object
  dto.KakaoProfile:
    properties:
      nickName:
        type: string
    type: object
  dto.KakaoTokens:
    properties:
      accessToken:
        type: string
      idToken:
        type: string
      refreshToken:
        type: string
    required:
    - accessToken
    - idToken
    - refreshToken
    type: object
  dto.ScheduleCalendarPreviewDTO:
    properties:
      date:
        type: string
      id:
        type: string
      image:
        type: string
      title:
        type: string
    type: object
  dto.ScheduleDTO:
    properties:
      casting:
        type: string
      company:
        type: string
      date:
        type: string
      image:
        type: string
      link:
        type: string
      location:
        type: string
      memo:
        type: string
      number:
        type: integer
      seat:
        type: string
      thumbmail:
        type: boolean
      time:
        type: string
      title:
        type: string
      userId:
        type: string
    required:
    - date
    - title
    type: object
  dto.ScheduleResponseDTO:
    properties:
      casting:
        type: string
      company:
        type: string
      date:
        type: string
      id:
        type: string
      image:
        type: string
      link:
        type: string
      location:
        type: string
      memo:
        type: string
      number:
        type: integer
      seat:
        type: string
      thumbmail:
        type: boolean
      time:
        type: string
      title:
        type: string
      userId:
        type: string
    type: object
  dto.ScheduleTicketPreviewDTO:
    properties:
      date:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  dto.TicketDTO:
    properties:
      backgroundColor:
        type: string
      datetime:
        type: string
      fields:
        items:
          $ref: '#/definitions/dto.Field'
        type: array
      foregroundColor:
        type: string
      image:
        type: string
      location:
        type: string
      title:
        type: string
      userId:
        type: string
    required:
    - datetime
    - image
    - location
    - title
    type: object
  dto.TicketUpdateDTO:
    properties:
      backgroundColor:
        type: string
      datetime:
        type: string
      fields:
        items:
          $ref: '#/definitions/dto.Field'
        type: array
      foregroundColor:
        type: string
      id:
        type: string
      image:
        type: string
      location:
        type: string
      title:
        type: string
      userId:
        type: string
    type: object
  dto.TokenResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  models.Field:
    properties:
      content:
        type: string
      subtitle:
        type: string
    type: object
  models.Ticket:
    properties:
      backgroundColor:
        type: string
      datetime:
        type: string
      fields:
        items:
          $ref: '#/definitions/models.Field'
        type: array
      foregroundColor:
        type: string
      id:
        type: string
      image:
        type: string
      location:
        type: string
      title:
        type: string
      userId:
        type: string
    type: object
  models.TicketPreview:
    properties:
      id:
        type: string
      image:
        type: string
    type: object
host: localhost:7000
info:
  contact: {}
  description: 소중한 기억을 나만의 티켓북에 기록하세요
  title: Tickit!
  version: "1.0"
paths:
  /api/auth:
    delete:
      consumes:
      - application/json
      description: 계정을 삭제합니다
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
      security:
      - ApiKeyAuth: []
      summary: 탈퇴하기
      tags:
      - Auth
    get:
      consumes:
      - application/json
      description: 사용자 프로필 정보를 가져옵니다
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.KakaoProfile'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 프로필 가져오기
      tags:
      - Auth
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: 카카오 계정으로 로그인합니다
      parameters:
      - description: 카카오 토큰
        in: body
        name: tokens
        required: true
        schema:
          $ref: '#/definitions/dto.KakaoTokens'
      produces:
      - application/json
      responses:
        "200":
          description: 성공
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.TokenResponse'
              type: object
      summary: 로그인하기
      tags:
      - Auth
  /api/auth/logout:
    delete:
      consumes:
      - application/json
      description: 로그아웃합니다
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
      security:
      - ApiKeyAuth: []
      summary: 로그아웃하기
      tags:
      - Auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: 카카오 계정으로 회원가입합니다
      parameters:
      - description: 카카오 토큰
        in: body
        name: tokens
        required: true
        schema:
          $ref: '#/definitions/dto.KakaoTokens'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.TokenResponse'
              type: object
      summary: 회원가입하기
      tags:
      - Auth
  /api/s3/presigned-url:
    get:
      consumes:
      - application/json
      description: Presigend URL를 얻고, 해당 URL을 통해 S3 이미지 업로드를 수행합니다
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
      summary: Presigend URL 불러오기
      tags:
      - S3
  /api/schedules:
    get:
      consumes:
      - application/json
      description: 시작 날짜와 종료 날짜 사이의 일정 목록을 불러옵니다
      parameters:
      - description: 시작 날짜
        in: query
        name: startDate
        required: true
        type: string
      - description: 종료 날짜
        in: query
        name: endDate
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.ScheduleCalendarPreviewDTO'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 달력에 일정 목록 불러오기
      tags:
      - Schedules
    post:
      consumes:
      - application/json
      description: 일정을 생성합니다. presigned-url을 발급받아 이미지 업로드를 완료한 후에, s3 url을 image 값으로
        저장합니다.
      parameters:
      - description: 일정 DTO
        in: body
        name: scheduleDTO
        required: true
        schema:
          $ref: '#/definitions/dto.ScheduleDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.ScheduleResponseDTO'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 일정 생성하기
      tags:
      - Schedules
  /api/schedules/{id}:
    delete:
      consumes:
      - application/json
      description: 일정을 삭제합니다
      parameters:
      - description: 일정 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
      security:
      - ApiKeyAuth: []
      summary: 일정 삭제하기
      tags:
      - Schedules
    get:
      consumes:
      - application/json
      description: 세부 일정을 불러옵니다
      parameters:
      - description: 일정 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.ScheduleResponseDTO'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 세부 일정 불러오기
      tags:
      - Schedules
    put:
      consumes:
      - application/json
      description: 일정을 수정합니다. presigned-url을 발급받아 이미지 업로드를 완료한 후에, s3 url을 image 값으로
        저장합니다.
      parameters:
      - description: 일정 ID
        in: path
        name: id
        required: true
        type: string
      - description: 일정 DTO
        in: body
        name: scheduleDTO
        required: true
        schema:
          $ref: '#/definitions/dto.ScheduleDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.ScheduleResponseDTO'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 일정 수정하기
      tags:
      - Schedules
  /api/schedules/for-ticket:
    get:
      consumes:
      - application/json
      description: 현 날짜 이전의 일정 목록을 불러옵니다. 티켓 생성 화면의'일정 불러오기' 버튼에서 사용됩니다.
      parameters:
      - description: 오늘 날짜
        in: query
        name: date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.ScheduleTicketPreviewDTO'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 티켓 생성 가능한 일정 목록 불러오기
      tags:
      - Schedules
  /api/tickets:
    get:
      consumes:
      - application/json
      description: 홈 화면에 작성한 티켓 목록을 불러옵니다
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.TicketPreview'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 티켓 목록 불러오기
      tags:
      - Tickets
    post:
      consumes:
      - application/json
      description: 티켓을 생성합니다. presigned-url을 발급받아 이미지 업로드를 완료한 후에, s3 url을 image 값으로
        저장합니다.
      parameters:
      - description: 생성할 티켓 DTO
        in: body
        name: ticketDTO
        required: true
        schema:
          $ref: '#/definitions/dto.TicketDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Ticket'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 티켓 생성하기
      tags:
      - Tickets
  /api/tickets/{id}:
    delete:
      consumes:
      - application/json
      description: 티켓을 삭제합니다
      parameters:
      - description: 티켓 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
      security:
      - ApiKeyAuth: []
      summary: 티켓 삭제하기
      tags:
      - Tickets
    get:
      consumes:
      - application/json
      description: 티켓 아이디로 세부정보를 불러옵니다
      parameters:
      - description: 티켓 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Ticket'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 티켓 세부정보 불러오기
      tags:
      - Tickets
    put:
      consumes:
      - application/json
      description: 티켓을 수정합니다. presigned-url을 발급받아 이미지 업로드를 완료한 후에, s3 url을 image 값으로
        저장합니다.
      parameters:
      - description: 티켓 ID
        in: path
        name: id
        required: true
        type: string
      - description: 수정된 티켓 DTO
        in: body
        name: ticketDTO
        required: true
        schema:
          $ref: '#/definitions/dto.TicketUpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Ticket'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 티켓 수정하기
      tags:
      - Tickets
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
